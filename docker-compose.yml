services:
  app:
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: chatzee/php-laravel12:latest
    env_file:
      - .env
    volumes:
      - ./:/var/www/html:cached
    depends_on:
      - db
      - redis
    networks: [appnet]

  queue:
    user: "${UID:-1000}:${GID:-1000}"
    image: chatzee/php-laravel12:latest
    env_file:
      - .env
    volumes:
      - ./:/var/www/html:cached
    command: sh -lc "php artisan queue:work --sleep=1 --tries=3 --backoff=5"
    depends_on:
      - app
      - redis
    restart: unless-stopped
    networks: [appnet]

  scheduler:
    user: "${UID:-1000}:${GID:-1000}"
    image: chatzee/php-laravel12:latest
    env_file:
      - .env
    volumes:
      - ./:/var/www/html:cached
    command: sh -lc "php artisan schedule:work"
    depends_on:
      - app
    restart: unless-stopped
    networks: [appnet]

  reverb:
    user: "${UID:-1000}:${GID:-1000}"
    image: chatzee/php-laravel12:latest
    env_file:
      - .env
    volumes:
      - ./:/var/www/html:cached
    command: sh -lc "php artisan reverb:start --host=0.0.0.0 --port=8080"
    ports:
      - "8080:8080"
    depends_on:
      - app
      - redis
      - db
    restart: unless-stopped
    networks: [appnet]

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: chatzee/nginx:latest
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/reverb.conf:/etc/nginx/conf.d/reverb.conf:ro
    networks: [appnet]

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks: [appnet]

  redis:
    image: redis:7-alpine
    command: ["redis-server","--appendonly","yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks: [appnet]

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "8025:8025"
    networks: [appnet]

volumes:
  dbdata:
  redisdata:

networks:
  appnet:
    driver: bridge
